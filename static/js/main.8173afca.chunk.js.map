{"version":3,"sources":["App.js","index.js"],"names":["exampleImage","App","imgRef","useRef","useState","imgUrl","setImgUrl","imgCurrent","setImgCurrent","model","setModel","predictions","setPredictions","useEffect","mobilenet","then","console","log","Container","Row","Col","className","InputGroup","FormControl","value","onChange","e","target","placeholder","aria-label","Append","Button","variant","onClick","Image","crossOrigin","ref","src","classify","current","pred","res","map","d","probability","toFixed","Alert","i","key","ReactDOM","render","document","getElementById"],"mappings":"oWAgBMA,EACJ,4FAqEaC,EAnEH,WACV,IAAMC,EAASC,mBADC,EAEYC,mBAASJ,GAFrB,mBAETK,EAFS,KAEDC,EAFC,OAGoBF,mBAASJ,GAH7B,mBAGTO,EAHS,KAGGC,EAHH,OAIUJ,qBAJV,mBAITK,EAJS,KAIFC,EAJE,OAKsBN,qBALtB,mBAKTO,EALS,KAKIC,EALJ,KAOhBC,qBAAU,WACRC,MAAiBC,MAAK,SAAAN,GACpBC,EAASD,GACTO,QAAQC,IAAI,qBAEb,IAeH,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAIC,UAAU,aAAd,aACA,kBAACC,EAAA,EAAD,CAAYD,UAAU,aACpB,kBAACE,EAAA,EAAD,CACEC,MAAOnB,EACPoB,SAAU,SAAAC,GAAC,OAAIpB,EAAUoB,EAAEC,OAAOH,QAClCI,YAAY,YACZC,aAAW,cAEb,kBAACP,EAAA,EAAWQ,OAAZ,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QA1B9B,WAChBzB,EAAcH,KAyBJ,gBAKJ,kBAAC6B,EAAA,EAAD,CACEC,YAAY,YACZd,UAAU,OACVe,IAAKlC,EACLmC,IAAK9B,IAEP,yBAAKc,UAAU,uBACb,kBAACU,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAlCxB,WACpBxB,EAAM6B,SAASpC,EAAOqC,SAASxB,MAAK,SAAAyB,GAClCxB,QAAQC,IAAI,gBACZD,QAAQC,IAAIuB,GACZ,IAAMC,EAAMD,EAAKE,KAAI,SAAAC,GAAC,gBAAOA,EAAEtB,UAAT,aAAuBsB,EAAEC,YAAYC,QAAQ,GAA7C,QACtBjC,EAAe6B,QA6BT,mBAEA9B,GACA,kBAACmC,EAAA,EAAD,CAAOd,QAAQ,UAAUX,UAAU,QACjC,4BACGV,EAAY+B,KAAI,SAACC,EAAGI,GAAJ,OAAU,wBAAIC,IAAKD,GAAIJ,YCxExDM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8173afca.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState, useEffect, useRef } from 'react';\n// import * as tf from '@tensorflow/tfjs';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\nimport './App.css';\nimport {\n  Container,\n  Row,\n  Col,\n  InputGroup,\n  FormControl,\n  Button,\n  Image,\n  Alert,\n} from 'react-bootstrap';\n\nconst exampleImage =\n  'https://cdn.glitch.com/5bf7c54b-c36f-4009-a191-186909fb788e%2Fcat_flickr_publicdomain.jpg';\n\nconst App = () => {\n  const imgRef = useRef();\n  const [imgUrl, setImgUrl] = useState(exampleImage);\n  const [imgCurrent, setImgCurrent] = useState(exampleImage);\n  const [model, setModel] = useState();\n  const [predictions, setPredictions] = useState();\n\n  useEffect(() => {\n    mobilenet.load().then(model => {\n      setModel(model);\n      console.log('model loaded');\n    });\n  }, []);\n\n  const loadImage = () => {\n    setImgCurrent(imgUrl);\n  };\n\n  const classifyImage = () => {\n    model.classify(imgRef.current).then(pred => {\n      console.log('Predictions:');\n      console.log(pred);\n      const res = pred.map(d => `${d.className} (${d.probability.toFixed(2)})`);\n      setPredictions(res);\n    });\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"mt-4 mb-4\">tfjs test</h1>\n          <InputGroup className=\"w-75 mb-3\">\n            <FormControl\n              value={imgUrl}\n              onChange={e => setImgUrl(e.target.value)}\n              placeholder=\"Image url\"\n              aria-label=\"Image url\"\n            />\n            <InputGroup.Append>\n              <Button variant=\"outline-secondary\" onClick={loadImage}>\n                Load image\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n          <Image\n            crossOrigin=\"anonymous\"\n            className=\"w-75\"\n            ref={imgRef}\n            src={imgCurrent}\n          />\n          <div className=\"justify-content-end\">\n            <Button variant=\"outline-secondary\" onClick={classifyImage}>Classify this!</Button>\n          </div>\n          { predictions && (\n            <Alert variant='primary' className='w-75'>\n              <ol>\n                {predictions.map((d, i) => <li key={i}>{d}</li>)}\n              </ol>\n            </Alert>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}